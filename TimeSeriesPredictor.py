# -*- coding: utf-8 -*-
"""SmartTrader.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mAAsMAw6I834l6-lJMU5jyLQJzKpVm4r
"""

import pandas as pd
nvidia = pd.read_csv('NVIDIApricehistory.csv')
nvdq = pd.read_csv('NVDQpricehistory.csv')

nvidia.head()

nvdq.head()

def prep_df(df):
  df['Date'] = pd.to_datetime(df['Date'], format='%d-%b-%y')

  df.drop_duplicates(subset = 'Date', keep = 'first', inplace = True)
  df.set_index('Date', inplace = True)
  df.sort_index(inplace = True)

  df.dropna(inplace=True)

  return df.asfreq('D', method = 'bfill')

nvidia = prep_df(nvidia)
nvidia.columns = nvidia.columns.str.strip()

nvdq = prep_df(nvdq)
nvdq.columns = nvdq.columns.str.strip()

nvidia.index.min()

nvdq.index.min()

!pip install prophet
from prophet import Prophet
import matplotlib.pyplot as plt

train_start = '2024-01-01'
train_end = '2024-10-01'

test_start = '2024-10-02'
test_end = '2024-12-31'

def prophet_prediction(df, field):
  df = pd.to_numeric(nvidia.loc['2024-01-01':'2024-12-10', field], errors = 'coerce')

  # Prophet prediction
  df_prophet = df.loc[train_start:train_end].reset_index()
  df_prophet.columns = ['ds', 'y']
  model_prophet = Prophet()
  model_prophet.fit(df_prophet)
  future = model_prophet.make_future_dataframe(periods=len(df.loc[test_start:test_end]), freq='D')
  forecast_prophet = model_prophet.predict(future)

  # Get the actual values for the predicted dates
  actual_test_values = df.loc[test_start:test_end]

  # Assign the 'ds' column as index to predicted_test_prophet,
  # using the index of actual_test_values
  predicted_test_prophet = forecast_prophet['yhat'][-len(df.loc[test_start:test_end]):].set_axis(actual_test_values.index)

  fig, ax = plt.subplots(figsize=(7, 3))
  df.loc[train_start:test_end].plot(ax=ax, label="Train")
  # Plot the actual test values
  actual_test_values.plot(ax=ax, label="Test")
  predicted_test_prophet.plot(ax=ax, label='Predicted DT')

  ax.set_ylabel(f'{col}')
  ax.set_title(f'{col} Time Series Prediction')

  ax.legend()
  plt.show()

cols = ['Open', 'Close', 'High', 'Low']
dfs = [nvidia, nvdq]

for df in dfs:
  for col in cols:
    prophet_prediction(df, col)